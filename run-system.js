const { execSync } = require('child_process');
const { spawn } = require('child_process');

async function runSystem() {
    console.log("üöÄ === –ó–ê–ü–£–°–ö –ü–û–õ–ù–û–ô DEFI –°–ò–°–¢–ï–ú–´ ===\n");
    
    try {
        console.log("üìã === –ò–ù–°–¢–†–£–ö–¶–ò–ò ===");
        console.log("1. –û—Ç–∫—Ä–æ–π—Ç–µ –ù–û–í–´–ô —Ç–µ—Ä–º–∏–Ω–∞–ª");
        console.log("2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞: cd D:\\grand_project");
        console.log("3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ Hardhat node: npx hardhat node");
        console.log("4. –û—Å—Ç–∞–≤—å—Ç–µ —ç—Ç–æ—Ç —Ç–µ—Ä–º–∏–Ω–∞–ª –æ—Ç–∫—Ä—ã—Ç—ã–º");
        console.log("5. –í–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ —ç—Ç–æ—Ç —Ç–µ—Ä–º–∏–Ω–∞–ª –∏ –Ω–∞–∂–º–∏—Ç–µ Enter");
        
        // Wait for user input
        const readline = require('readline');
        const rl = readline.createInterface({
            input: process.stdin,
            output: process.stdout
        });
        
        await new Promise(resolve => {
            rl.question("\n–ù–∞–∂–º–∏—Ç–µ Enter –∫–æ–≥–¥–∞ Hardhat node –±—É–¥–µ—Ç –∑–∞–ø—É—â–µ–Ω...", () => {
                rl.close();
                resolve();
            });
        });
        
        console.log("\nüîß === –†–ê–ó–í–û–†–ê–ß–ò–í–ê–ù–ò–ï –ö–û–ù–¢–†–ê–ö–¢–û–í ===");
        execSync('node deploy-all-simplified.js', { stdio: 'inherit' });
        
        console.log("\nüîç === –ü–†–û–í–ï–†–ö–ê –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–Ø ===");
        execSync('node check-deployment.js', { stdio: 'inherit' });
        
        console.log("\nüß™ === –ó–ê–ü–£–°–ö –¢–ï–°–¢–û–í ===");
        execSync('node test-final-system-fixed.js', { stdio: 'inherit' });
        
        console.log("\nüéâ === –°–ò–°–¢–ï–ú–ê –ó–ê–ü–£–©–ï–ù–ê –£–°–ü–ï–®–ù–û! ===");
        console.log("‚úÖ Hardhat node —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º —Ç–µ—Ä–º–∏–Ω–∞–ª–µ");
        console.log("‚úÖ –í—Å–µ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—ã —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã");
        console.log("‚úÖ –¢–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ");
        console.log("‚úÖ –û—à–∏–±–∫–∏ balanceOf –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã");
        
    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞:", error.message);
        process.exit(1);
    }
}

runSystem(); 